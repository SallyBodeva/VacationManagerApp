@model DetailsTeamViewModel

@{
	ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
	<h4>Team</h4>
	<hr />
	<dl class="row">
		<dt class="col-sm-2">
			Team name
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.TeamName)
		</dd>
		<dt class="col-sm-2">
			Leader name
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.LeaderName)
		</dd>
		@if (Model.Project == null)
		{
			<span>This team is not currently on a project</span>
		}
		else
		{
			<dt class="col-sm-2">
				Project Name
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.Project.Name)
			</dd>
			<dt class="col-sm-2">
				Project Description
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.Project.Description)
			</dd>
		}
	</dl>
</div>
<br>
<h2>Developers</h2>
<br>
@if (Model.Developers.Count == 0)
{
	<p>This team does not developers yet</p>
}
else
{
	<div class="form-group">
		<table class="table table-striped">
			<thead>
				<tr>
					<th>First Name</th>
					<th>Last Name</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model.Developers)
				{
					<tr>
						<td>@item.FirstName</td>
						<td>@item.LastName</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}
<div>
	<a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
	<a asp-action="Index">Back to List</a>
</div>
<p></p>
<p></p>
<p></p>
<p></p>